@model UsersApp.ViewModels.CreateOrderViewModel

@{
    ViewData["Title"] = "Create Order";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title mb-0">Create New Order</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post" id="orderForm">
                        @Html.AntiForgeryToken()

                        <!-- Model validation summary -->
                        <div asp-validation-summary="All" class="text-danger mb-3"></div>

                        <!-- Customer Selection -->
                        <div class="mb-4">
                            <label asp-for="CustomerId" class="form-label"></label>
                            <select asp-for="CustomerId" asp-items="@Model.Customers" class="form-select" required>
                                <option value="">-- Select Customer --</option>
                            </select>
                            <span asp-validation-for="CustomerId" class="text-danger"></span>
                        </div>

                        <!-- Order Items Section -->
                        <div class="mb-4">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5>Order Items</h5>
                                <button type="button" class="btn btn-success btn-sm" id="addItemBtn">
                                    <i class="fas fa-plus"></i> Add Item
                                </button>
                            </div>

                            <div id="orderItemsContainer">
                                @if (Model?.OrderItems != null && Model.OrderItems.Any())
                                {
                                    @for (int i = 0; i < Model.OrderItems.Count; i++)
                                    {
                                        <div class="order-item-row card mb-3" data-index="@i">
                                            <div class="card-body">
                                                <div class="row align-items-end">
                                                    <div class="col-md-4">
                                                        <label class="form-label">Product</label>
                                                        <select asp-for="OrderItems[i].ProductId"
                                                                asp-items="@Model.Products"
                                                                class="form-select product-select"
                                                                data-index="@i">
                                                            <option value="">-- Select Product --</option>
                                                        </select>
                                                        <span asp-validation-for="OrderItems[i].ProductId" class="text-danger"></span>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label class="form-label">Quantity</label>
                                                        <input asp-for="OrderItems[i].Quantity"
                                                               class="form-control quantity-input"
                                                               type="number"
                                                               min="1"
                                                               placeholder="1"
                                                               data-index="@i"
                                                               value="1" />
                                                        <span asp-validation-for="OrderItems[i].Quantity" class="text-danger"></span>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label class="form-label">Unit Price</label>
                                                        <div class="input-group">
                                                            <span class="input-group-text">$</span>
                                                            <input asp-for="OrderItems[i].UnitPrice"
                                                                   class="form-control unit-price"
                                                                   readonly
                                                                   data-index="@i"
                                                                   value="0.00" />
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label class="form-label">Subtotal</label>
                                                        <div class="input-group">
                                                            <span class="input-group-text">$</span>
                                                            <input asp-for="OrderItems[i].Subtotal"
                                                                   class="form-control subtotal"
                                                                   readonly
                                                                   data-index="@i"
                                                                   value="0.00" />
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <button type="button" class="btn btn-danger btn-sm remove-item">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <!-- Default empty item -->
                                    <div class="order-item-row card mb-3" data-index="0">
                                        <div class="card-body">
                                            <div class="row align-items-end">
                                                <div class="col-md-4">
                                                    <label class="form-label">Product</label>
                                                    <select name="OrderItems[0].ProductId"
                                                            asp-items="@Model?.Products"
                                                            class="form-select product-select"
                                                            data-index="0">
                                                        <option value="">-- Select Product --</option>
                                                    </select>
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="form-label">Quantity</label>
                                                    <input name="OrderItems[0].Quantity"
                                                           class="form-control quantity-input"
                                                           type="number"
                                                           min="1"
                                                           placeholder="1"
                                                           data-index="0"
                                                           value="1" />
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="form-label">Unit Price</label>
                                                    <div class="input-group">
                                                        <span class="input-group-text">$</span>
                                                        <input name="OrderItems[0].UnitPrice"
                                                               class="form-control unit-price"
                                                               readonly
                                                               data-index="0"
                                                               value="0.00" />
                                                    </div>
                                                </div>
                                                <div class="col-md-2">
                                                    <label class="form-label">Subtotal</label>
                                                    <div class="input-group">
                                                        <span class="input-group-text">$</span>
                                                        <input name="OrderItems[0].Subtotal"
                                                               class="form-control subtotal"
                                                               readonly
                                                               data-index="0"
                                                               value="0.00" />
                                                    </div>
                                                </div>
                                                <div class="col-md-2">
                                                    <button type="button" class="btn btn-danger btn-sm remove-item" disabled>
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <!-- Total Amount Display -->
                            <div class="card bg-light">
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-8"></div>
                                        <div class="col-md-4">
                                            <h5>Total Amount: $<span id="totalAmount">0.00</span></h5>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Notes -->
                        <div class="mb-4">
                            <label asp-for="Notes" class="form-label">Notes (Optional)</label>
                            <textarea asp-for="Notes" class="form-control" rows="3" placeholder="Enter any additional notes"></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a asp-action="Index" class="btn btn-secondary me-md-2">Cancel</a>
                            <button type="submit" class="btn btn-success" id="submitBtn">Create Order</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            let itemIndex = $('.order-item-row').length;

            // Form submit event
            $('#orderForm').on('submit', function(e) {
                console.log('Form is being submitted');
                console.log('Form data:', $(this).serialize());

                // En az bir valid item var mı kontrol et
                let hasValidItems = false;
                $('.order-item-row').each(function() {
                    let productId = $(this).find('.product-select').val();
                    let quantity = $(this).find('.quantity-input').val();
                    if (productId && quantity > 0) {
                        hasValidItems = true;
                    }
                });

                if (!hasValidItems) {
                    alert('Please add at least one product to the order.');
                    e.preventDefault();
                    return false;
                }

                let customerId = $('#CustomerId').val();
                if (!customerId) {
                    alert('Please select a customer.');
                    e.preventDefault();
                    return false;
                }

                return true;
            });

            // Add new item
            $('#addItemBtn').click(function () {
                addNewItem();
            });

            // Remove item
            $(document).on('click', '.remove-item', function () {
                if ($('.order-item-row').length > 1) {
                    $(this).closest('.order-item-row').remove();
                    calculateTotal();
                    updateItemIndices();
                    updateRemoveButtons();
                }
            });

            // Calculate subtotal when product or quantity changes
            $(document).on('change input', '.product-select, .quantity-input', function () {
                let index = $(this).data('index');
                calculateItemSubtotal(index);
            });

            function addNewItem() {
                let newItemHtml = `
                    <div class="order-item-row card mb-3" data-index="${itemIndex}">
                        <div class="card-body">
                            <div class="row align-items-end">
                                <div class="col-md-4">
                                    <label class="form-label">Product</label>
                                    <select name="OrderItems[${itemIndex}].ProductId" class="form-select product-select" data-index="${itemIndex}">
                                        <option value="">-- Select Product --</option>
                                        @if (Model?.Products != null)
                                        {
                                                    @foreach (var product in Model.Products)
                                                    {
                                                                <option value="@product.Value">@Html.Raw(product.Text)</option>
                                                    }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Quantity</label>
                                    <input name="OrderItems[${itemIndex}].Quantity" class="form-control quantity-input" type="number" min="1" placeholder="1" data-index="${itemIndex}" value="1" />
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Unit Price</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input name="OrderItems[${itemIndex}].UnitPrice" class="form-control unit-price" readonly data-index="${itemIndex}" value="0.00" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Subtotal</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input name="OrderItems[${itemIndex}].Subtotal" class="form-control subtotal" readonly data-index="${itemIndex}" value="0.00" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <button type="button" class="btn btn-danger btn-sm remove-item">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>`;

                $('#orderItemsContainer').append(newItemHtml);
                itemIndex++;
                updateRemoveButtons();
            }

            function calculateItemSubtotal(index) {
                let productSelect = $(`.product-select[data-index="${index}"]`);
                let quantityInput = $(`.quantity-input[data-index="${index}"]`);
                let unitPriceInput = $(`.unit-price[data-index="${index}"]`);
                let subtotalInput = $(`.subtotal[data-index="${index}"]`);

                let productId = productSelect.val();
                let quantity = parseInt(quantityInput.val()) || 0;

                if (productId && quantity > 0) {
                    $.ajax({
                        url: '@Url.Action("GetProductPrice", "Order")',
                        type: 'GET',
                        data: { productId: productId },
                        success: function (data) {
                            let unitPrice = parseFloat(data.price) || 0;
                            let subtotal = unitPrice * quantity;

                            unitPriceInput.val(unitPrice.toFixed(2));
                            subtotalInput.val(subtotal.toFixed(2));
                            calculateTotal();
                        },
                        error: function (xhr, status, error) {
                            console.error('Error getting product price:', error);
                            unitPriceInput.val('0.00');
                            subtotalInput.val('0.00');
                            calculateTotal();
                        }
                    });
                } else {
                    unitPriceInput.val('0.00');
                    subtotalInput.val('0.00');
                    calculateTotal();
                }
            }

            function calculateTotal() {
                let total = 0;
                $('.subtotal').each(function () {
                    let subtotal = parseFloat($(this).val()) || 0;
                    total += subtotal;
                });
                $('#totalAmount').text(total.toFixed(2));
            }

            function updateItemIndices() {
                $('.order-item-row').each(function (index) {
                    $(this).attr('data-index', index);
                    $(this).find('.product-select').attr('name', `OrderItems[${index}].ProductId`).attr('data-index', index);
                    $(this).find('.quantity-input').attr('name', `OrderItems[${index}].Quantity`).attr('data-index', index);
                    $(this).find('.unit-price').attr('name', `OrderItems[${index}].UnitPrice`).attr('data-index', index);
                    $(this).find('.subtotal').attr('name', `OrderItems[${index}].Subtotal`).attr('data-index', index);
                });
                itemIndex = $('.order-item-row').length;
            }

            function updateRemoveButtons() {
                $('.remove-item').prop('disabled', $('.order-item-row').length <= 1);
            }

            // Initialize
            updateRemoveButtons();
            calculateTotal();
        });
    </script>
}